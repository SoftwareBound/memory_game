{"version":3,"sources":["Welcome.js","timeDelay.js","Lightbulb.js","Game.js","Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["Welcome","userName","setUserName","setDisplayGame","className","placeholder","onChange","e","target","value","onClick","alert","timeDelay","ms","Promise","resolve","setTimeout","Lightbulb","color","flash","Game","bestScore","setBestScore","setScoreHistory","useState","isOn","setIsOn","bulbList","initPlay","isDisplay","colors","score","userPlay","userColors","isOver","setIsOver","play","setPlay","flashColor","setFlashColor","a","i","length","copyColors","reverse","copyUserColors","lastColor","pop","useEffect","newColor","Math","floor","random","push","displayColors","map","v","cardClickHandle","prev","Sidebar","scoreHistory","sort","Date","App","displayGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1868695e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Welcome = ({ userName, setUserName, setDisplayGame }) => {\r\n  const handleChange = (e) => {\r\n    setUserName(e.target.value);\r\n  };\r\n  const handleClick = () => {\r\n    if (userName === \"\") {\r\n      alert(\"Please provide name\");\r\n    } else {\r\n      setDisplayGame(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"welcome_container\">\r\n      <h1>Nice Game</h1>\r\n      <input\r\n        placeholder=\"Enter your name\"\r\n        onChange={handleChange}\r\n        value={userName}\r\n        className=\"text_size\"\r\n      />\r\n      <button onClick={handleClick} className=\"text_size\">\r\n        Start\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","export default function timeDelay(ms) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n","import React from \"react\";\r\n\r\nconst Lightbulb = ({ color, onClick, flash }) => {\r\n  return (\r\n    <div\r\n      onClick={onClick}\r\n      className={`lightbulb ${color} ${flash ? \"flash\" : \"\"}`}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Lightbulb;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport timeDelay from \"./timeDelay\";\r\nimport Lightbulb from \"./Lightbulb\";\r\n\r\nconst Game = ({ userName, bestScore, setBestScore, setScoreHistory }) => {\r\n  const [isOn, setIsOn] = useState(true);\r\n  const bulbList = [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"];\r\n  const initPlay = {\r\n    isDisplay: false,\r\n    colors: [],\r\n    score: 0,\r\n    userPlay: false,\r\n    userColors: [],\r\n  };\r\n  const [isOver, setIsOver] = useState(false);\r\n  const [play, setPlay] = useState(initPlay);\r\n  const [flashColor, setFlashColor] = useState(\"\");\r\n\r\n  function startHandle() {\r\n    setIsOn(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isOn) {\r\n      setPlay({ ...initPlay, isDisplay: true });\r\n    } else {\r\n      setPlay(initPlay);\r\n    }\r\n  }, [isOn]);\r\n\r\n  useEffect(() => {\r\n    if (isOn && play.isDisplay) {\r\n      let newColor = bulbList[Math.floor(Math.random() * 6)];\r\n\r\n      const copyColors = [...play.colors];\r\n      copyColors.push(newColor);\r\n      setPlay({ ...play, colors: copyColors });\r\n    }\r\n  }, [isOn, play.isDisplay]);\r\n\r\n  useEffect(() => {\r\n    if (isOn && play.isDisplay && play.colors.length) {\r\n      displayColors();\r\n    }\r\n  }, [isOn, play.isDisplay, play.colors.length]);\r\n\r\n  async function displayColors() {\r\n    await timeDelay(1000);\r\n    for (let i = 0; i < play.colors.length; i++) {\r\n      setFlashColor(play.colors[i]);\r\n      await timeDelay(500);\r\n      setFlashColor(\"\");\r\n      await timeDelay(500);\r\n\r\n      if (i === play.colors.length - 1) {\r\n        const copyColors = [...play.colors];\r\n\r\n        setPlay({\r\n          ...play,\r\n          isDisplay: false,\r\n          userPlay: true,\r\n          userColors: copyColors.reverse(),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  async function cardClickHandle(color) {\r\n    if (!play.isDisplay && play.userPlay) {\r\n      const copyUserColors = [...play.userColors];\r\n      const lastColor = copyUserColors.pop();\r\n      setFlashColor(color);\r\n      if (color === lastColor) {\r\n        if (copyUserColors.length) {\r\n          setPlay({ ...play, userColors: copyUserColors });\r\n        } else {\r\n          await timeDelay(100);\r\n          setPlay({\r\n            ...play,\r\n            isDisplay: true,\r\n            userPlay: false,\r\n            score: play.score + 10,\r\n            userColors: [],\r\n          });\r\n        }\r\n      } else {\r\n        await timeDelay(500);\r\n\r\n        setPlay({ ...initPlay, score: play.score });\r\n        setIsOver(true);\r\n      }\r\n      await timeDelay(500);\r\n      setFlashColor(\"\");\r\n    }\r\n  }\r\n\r\n  function closeHandle() {\r\n    if (play.score > bestScore) {\r\n      setBestScore(play.score);\r\n    }\r\n    setScoreHistory((prev) => [...prev, play.score]);\r\n    setIsOver(false);\r\n    setIsOn(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"board_wrapper\">\r\n      <div className=\"user_details\">\r\n        <span className=\"text_size\">{userName}</span>\r\n\r\n        <span className=\"text_size\">{`Best Score: ${bestScore}`}</span>\r\n      </div>\r\n      <div className=\"board\">\r\n        <div className=\"lightbulb_wrapper\">\r\n          {bulbList &&\r\n            bulbList.map((v, i) => (\r\n              <Lightbulb\r\n                onClick={() => {\r\n                  cardClickHandle(v);\r\n                }}\r\n                flash={flashColor === v}\r\n                color={v}\r\n                key={i}\r\n              ></Lightbulb>\r\n            ))}\r\n        </div>\r\n\r\n        {isOn && !play.isDisplay && !play.userPlay && isOver && (\r\n          <div className=\"lost\">\r\n            <div>Final Score: {play.score}</div>\r\n            <button onClick={closeHandle}>Close</button>\r\n          </div>\r\n        )}\r\n        {!isOn && !play.score && (\r\n          <button onClick={startHandle} className=\"start_button\">\r\n            Start\r\n          </button>\r\n        )}\r\n        {isOn && (play.isDisplay || play.userPlay) && (\r\n          <div className=\"score\">{`${play.score}`}</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\r\n\r\nconst Sidebar = ({ userName, scoreHistory }) => {\r\n  scoreHistory.sort().reverse();\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <h3>Score History</h3>\r\n      <div>\r\n        <h4>{userName}</h4>\r\n        <div>{Date()}</div>\r\n        <div>\r\n          <h4>Scores</h4>\r\n          {scoreHistory.map((score, i) => (\r\n            <div key={i} className=\"sidebar_details\">{`${\r\n              i + 1\r\n            }. ${score} `}</div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import \"./App.css\";\nimport Welcome from \"./Welcome\";\nimport React, { useState } from \"react\";\nimport Game from \"./Game\";\nimport Sidebar from \"./Sidebar\";\n\nconst App = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [bestScore, setBestScore] = useState(0);\n  const [displayGame, setDisplayGame] = useState(false);\n  const [scoreHistory, setScoreHistory] = useState([]);\n\n  return (\n    <div className=\"container\">\n      {displayGame ? (\n        <div className=\"game_container\">\n          <Sidebar\n            userName={userName}\n            bestScore={bestScore}\n            scoreHistory={scoreHistory}\n          />\n          <Game\n            userName={userName}\n            bestScore={bestScore}\n            setBestScore={setBestScore}\n            setScoreHistory={setScoreHistory}\n          />\n        </div>\n      ) : (\n        <Welcome\n          userName={userName}\n          setUserName={setUserName}\n          setDisplayGame={setDisplayGame}\n          className=\"welcome_container\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}